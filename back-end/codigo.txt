import psycopg2
from psycopg2 import sql, errors


def create_database():
    conexao = psycopg2.connect(
        host='localhost',
        database='postgres',
        user='postgres',
        password='Vitinho07',
        client_encoding='UTF-8'
    )
    conexao.autocommit = True
    cursor = conexao.cursor()

    try:
        cursor.execute("CREATE DATABASE gerenciador_estoque ENCODING 'UTF8' TEMPLATE template0")
        print("Banco de dados criado com sucesso.")
    except errors.DuplicateDatabase:
        print("Banco de dados já existe.")
    except Exception as e:
        print("Erro ao criar banco de dados:", e)
    finally:
        cursor.close()
        conexao.close()



def connect_database():
    try:
        conexao = psycopg2.connect(
            host='localhost',
            database='gerenciador_estoque',
            user='postgres',
            password='Vitinho07',
            client_encoding='UTF-8'
        )
        print("Conexão feita com sucesso.")
        return conexao
    except psycopg2.Error as e:
        print("Erro ao conectar ao banco de dados:", e)
        return None



import psycopg2
from psycopg2 import sql
from database import connect_database

#FUNÇÃO PARA CRIAR AS TABELAS
def create_tables():
    conexao = connect_database()
    if not conexao:
        return "Conexão não estabelecida."
    
    cur = conexao.cursor()

    try:
        cur.execute(""" 
        CREATE TABLE IF NOT EXISTS produtos(
                    id SERIAL PRIMARY KEY,
                    nome VARCHAR(80) NOT NULL,
                    quantidade INT NOT NULL CHECK(quantidade >= 0),
                    preco NUMERIC(8, 2) NOT NULL CHECK(preco > 0),
                    descricao TEXT
                    )
""")    
        conexao.commit()

    except Exception as e:
        print(f"Erro ao criar a tabela: {e}")

    finally:
        cur.close()
        conexao.close()
        print("Tabelas criadas com sucesso.")